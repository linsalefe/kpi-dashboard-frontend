"use client";

import { useEffect, useState } from "react";
import { useRouter, usePathname } from "next/navigation";
import Link from "next/link";
import {
  LayoutDashboard,
  Megaphone,
  Briefcase,
  Calendar,
  Users,
  GraduationCap,
  DollarSign,
  LogOut,
  Menu,
  X,
  ChevronRight,
} from "lucide-react";

export default function DashboardLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const router = useRouter();
  const pathname = usePathname();
  const [user, setUser] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [sidebarOpen, setSidebarOpen] = useState(true);

  useEffect(() => {
    const token = localStorage.getItem("token");
    const userData = localStorage.getItem("user");

    if (!token) {
      router.push("/login");
      return;
    }

    if (userData) {
      setUser(JSON.parse(userData));
    }

    setLoading(false);
  }, [router]);

  const handleLogout = () => {
    localStorage.removeItem("token");
    localStorage.removeItem("user");
    router.push("/login");
  };

  if (loading) {
    return (
      <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-gray-50 to-gray-100">
        <div className="text-center">
          <div className="mb-4 h-12 w-12 animate-spin rounded-full border-4 border-gray-200 border-t-cenat-secondary mx-auto"></div>
          <p className="text-gray-600 font-medium">Carregando...</p>
        </div>
      </div>
    );
  }

  const menuItems = [
    {
      name: "Visão Geral",
      href: "/dashboard",
      icon: LayoutDashboard,
      color: "text-purple-600",
    },
    {
      name: "Marketing",
      href: "/dashboard/marketing",
      icon: Megaphone,
      color: "text-blue-600",
    },
    {
      name: "Comercial",
      href: "/dashboard/comercial",
      icon: Briefcase,
      color: "text-indigo-600",
    },
    {
      name: "Eventos",
      href: "/dashboard/eventos",
      icon: Calendar,
      color: "text-pink-600",
    },
    {
      name: "RH",
      href: "/dashboard/rh",
      icon: Users,
      color: "text-orange-600",
    },
    {
      name: "Pedagógico",
      href: "/dashboard/pedagogico",
      icon: GraduationCap,
      color: "text-green-600",
    },
    {
      name: "Financeiro",
      href: "/dashboard/financeiro",
      icon: DollarSign,
      color: "text-emerald-600",
    },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 via-gray-100 to-gray-50">
      {/* Header Premium */}
      <header className="bg-white/80 backdrop-blur-md shadow-sm border-b border-gray-200/50 sticky top-0 z-50">
        <div className="flex items-center justify-between px-6 py-4">
          <div className="flex items-center gap-4">
            <button
              onClick={() => setSidebarOpen(!sidebarOpen)}
              className="p-2 text-gray-600 hover:text-cenat-primary hover:bg-gray-100 rounded-lg transition-all duration-200"
              aria-label="Toggle menu"
            >
              {sidebarOpen ? (
                <X className="w-5 h-5" />
              ) : (
                <Menu className="w-5 h-5" />
              )}
            </button>

            <div className="flex items-center gap-3">
              <div className="h-10 w-10 rounded-xl bg-gradient-to-br from-cenat-secondary to-cenat-accent flex items-center justify-center">
                <span className="text-white font-bold text-lg">C</span>
              </div>
              <div>
                <h1 className="text-xl font-bold text-cenat-primary tracking-tight">
                  CENAT
                </h1>
                <p className="text-xs text-gray-500 font-medium">Dashboard</p>
              </div>
            </div>
          </div>

          <div className="flex items-center gap-4">
            <div className="hidden md:block text-right">
              <p className="text-sm font-semibold text-gray-900">{user?.nome}</p>
              <p className="text-xs text-gray-500">
                {user?.role} • {user?.setor}
              </p>
            </div>

            <div className="h-10 w-10 rounded-full bg-gradient-to-br from-cenat-secondary to-purple-600 flex items-center justify-center text-white font-semibold text-sm">
              {user?.nome?.charAt(0).toUpperCase()}
            </div>

            <button
              onClick={handleLogout}
              className="flex items-center gap-2 px-4 py-2 rounded-lg bg-red-50 text-red-600 hover:bg-red-100 transition-all duration-200 font-medium text-sm"
            >
              <LogOut className="w-4 h-4" />
              <span className="hidden sm:inline">Sair</span>
            </button>
          </div>
        </div>
      </header>

      <div className="flex">
        {/* Sidebar Premium */}
        <aside
          className={`${
            sidebarOpen ? "w-72" : "w-0"
          } bg-white border-r border-gray-200/50 transition-all duration-300 overflow-hidden shadow-lg`}
        >
          <nav className="p-4 space-y-1">
            {menuItems.map((item) => {
              const isActive = pathname === item.href;
              const Icon = item.icon;

              return (
                <Link
                  key={item.href}
                  href={item.href}
                  className={`group flex items-center gap-3 px-4 py-3 rounded-xl transition-all duration-200 relative ${
                    isActive
                      ? "bg-gradient-to-r from-cenat-secondary/10 to-transparent text-cenat-secondary shadow-sm"
                      : "text-gray-700 hover:bg-gray-50 hover:translate-x-1"
                  }`}
                >
                  {isActive && (
                    <div className="absolute left-0 top-1/2 -translate-y-1/2 w-1 h-8 bg-cenat-secondary rounded-r-full" />
                  )}

                  <div
                    className={`${
                      isActive ? item.color : "text-gray-400"
                    } group-hover:${item.color} transition-colors`}
                  >
                    <Icon className="w-5 h-5" />
                  </div>

                  <span
                    className={`flex-1 font-medium ${
                      isActive ? "font-semibold" : ""
                    }`}
                  >
                    {item.name}
                  </span>

                  {isActive && (
                    <ChevronRight className="w-4 h-4 text-cenat-secondary" />
                  )}
                </Link>
              );
            })}
          </nav>

          {/* Footer da Sidebar */}
          <div className="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200/50 bg-gradient-to-t from-gray-50 to-transparent">
            <div className="text-center text-xs text-gray-500">
              <p className="font-medium">v1.0.0</p>
              <p className="mt-1">© 2025 CENAT</p>
            </div>
          </div>
        </aside>

        {/* Main Content */}
        <main className="flex-1 overflow-y-auto">
          <div className="mx-auto max-w-7xl p-6 animate-fade-in">
            {children}
          </div>
        </main>
      </div>
    </div>
  );
}
